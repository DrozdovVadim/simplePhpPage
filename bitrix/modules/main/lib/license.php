<? namespace Bitrix\Main;$GLOBALS['____732611587']= array(base64_decode('Zmls'.'Z'.'V9leG'.'l'.'zd'.'HM='),base64_decode('c3RydG91cHB'.'lcg'.'=='),base64_decode(''.'bWQ1'),base64_decode('bWQ'.'1'),base64_decode('aW'.'5f'.'YXJy'.'YXk='),base64_decode(''.'aW5fYXJyYXk='),base64_decode('aW5fYXJyYXk='),base64_decode('ZGV'.'maW5'.'lZ'.'A=='),base64_decode(''.'ZGVmaW5lZA=='),base64_decode('ZGVma'.'W5lZA=='),base64_decode('Z'.'mlsZ'.'V'.'9leG'.'lzdHM'.'='),base64_decode('Zmls'.'ZV9leG'.'lzdHM='),base64_decode('Zml'.'sZ'.'V9leGlzdH'.'M'.'='),base64_decode(''.'ZmlsZV9le'.'GlzdHM='),base64_decode('ZXh'.'wbG9kZQ=='));if(!function_exists(__NAMESPACE__.'\\___1276009')){function ___1276009($_1738233813){static $_1569113271= false; if($_1569113271 == false) $_1569113271=array('L2J'.'p'.'dHJpe'.'C'.'9saWNlbn'.'NlX2'.'tleS5w'.'a'.'HA=','','','REVNTw'.'==','REV'.'NTw==','Q'.'kl'.'UUklY',''.'TE'.'l'.'DRU5DR'.'Q==','R'.'EVNTw==','L2tle'.'V91c'.'GRhdG'.'UucGhwP2xpY2Vuc2Vfa2V5PQ'.'='.'=','Jn'.'RvYmFz'.'a2V0P'.'Xk'.'mbGFuZz0=',''.'cn'.'U=','a'.'3'.'o=','Yn'.'k=','aHR0cHM6L'.'y9kZ'.'XYu'.'MWMtYml0c'.'ml'.'4LnJ1L2xl'.'YX'.'Ju'.'aW'.'5nL2NvdXJzZS9p'.'bmRleC5waHA/Q09VUlNFX0lE'.'PT'.'E'.'zNSZMRVN'.'TT05fS'.'UQ9MjU3'.'MjA=','aH'.'R0'.'cHM6'.'L'.'y90cmF'.'p'.'bmluZy'.'5'.'iaX'.'R'.'y'.'aXg'.'yNC5jb20vc3'.'VwcG9ydC'.'9'.'0c'.'mFp'.'bmlu'.'Zy9'.'jb3Vyc2UvaW'.'5'.'k'.'ZX'.'gucGhwP0NPVVJTRV9JR'.'D0'.'xN'.'zgmT'.'E'.'VTU09O'.'X0l'.'EP'.'TI'.'1OTMyJkxFU1NPTl9QQV'.'RIPT'.'E3NTIw'.'L'.'jE3'.'NTYyLjI'.'1'.'O'.'TMwLjI1O'.'TMy',''.'cnU'.'=','Ynk=','a3o=',''.'ZGU=','ZXU=','Zn'.'I=','cGw=','a'.'X'.'Q=','dWs=','ZXU=','Y'.'29t','ZW4=','REVNT'.'w==','W'.'Q==',''.'VElNRUxJTU'.'lUX0'.'VESVRJT04=','WQ'.'==',''.'RU5DT0RF','WQ==',''.'U2l0ZU'.'V4'.'cGly'.'ZU'.'RhdGU=','b'.'W'.'Fp'.'bg==','fn'.'N1c'.'H'.'BvcnRfZmlu'.'aX'.'NoX2RhdGU=',''.'WS'.'1tLWQ'.'=','WS1tL'.'WQ=','Y'.'ml0'.'c'.'ml'.'4MjQ'.'=','bWFpb'.'g==','fl'.'BBUkFNX0NM'.'SUVO'.'VF9MQU5H',''.'aW50'.'cmFuZXQ'.'=','Z'.'W4'.'=','c'.'nU=','bWFp'.'bg==',''.'dm'.'Vu'.'Z'.'G9y',''.'dWFfYml0c'.'ml'.'4X'.'3Bv'.'cnR'.'hbA==','dW'.'E=','Y'.'ml'.'0cml4X3'.'Bvc'.'nRhbA==','ZW4=','MWNfYm'.'l0cml4X3'.'B'.'vcnRh'.'bA='.'=','cnU=','L2JpdH'.'Jpe'.'C9t'.'b2R'.'1'.'b'.'GVzL21haW4'.'vbGFuZy'.'91'.'YQ='.'=','dWE=','L2'.'J'.'pdHJp'.'eC9tb2R'.'1bGVzL21'.'h'.'aW4vbG'.'FuZy9ieQ'.'==','Ynk=','L'.'2JpdH'.'Jpe'.'C'.'9tb2R'.'1'.'bGVz'.'L21'.'h'.'aW4vb'.'GF'.'uZy'.'9re'.'g==',''.'a3o=','L2'.'Jpd'.'H'.'Jp'.'eC'.'9'.'tb2R1bGVzL21'.'h'.'aW'.'4vb'.'GFuZy'.'9ydQ==','cnU=','b'.'WF'.'p'.'bg'.'==',''.'flBB'.'UkF'.'NX1'.'BBU'.'lROR'.'VJfS'.'UQ=','bW'.'Fp'.'b'.'g'.'==','UEFSQU1f'.'TUFYX1VT'.'RVJT',''.'bWF'.'pbg==','fkNP'.'VU5'.'U'.'X0V'.'Y'.'V'.'FJB','T'.'g==',''.'WQ='.'=','Z'.'Xh0c'.'mFu'.'Z'.'XQ=','QU5EIF'.'UuTEFTVF9MT0d'.'JTiA+'.'IA='.'=','QU5EIF'.'UuTEFT'.'VF9MT0dJTiBJUyBOT'.'1QgTlV'.'MTA==','a'.'W5'.'0cmFu'.'ZX'.'Q=','ZXh'.'0cmFuZXQ'.'=','ZXh'.'0cmFu'.'ZXRfZ3JvdXA=','bW'.'Fpbg==',''.'f'.'m'.'x'.'pY2Vuc2Vf'.'b'.'mFtZQ==','b'.'WF'.'p'.'bg'.'==','fmxpY2Vuc2'.'VfY2'.'9k'.'ZXM=','','L'.'A'.'==');return base64_decode($_1569113271[$_1738233813]);}}; use Bitrix\Main\Config\Option; use Bitrix\Main\Type\Date; final class License{ private?string $_951483534= null; private const DOMAINS_STORE_LICENSE=[ 'ru' => 'https://util.1c-bitrix.ru', 'ua' => 'https://util.bitrix.ua', 'en' => 'https://util.bitrixsoft.com', 'kz' => 'https://util.1c-bitrix.kz', 'by' => 'https://util.1c-bitrix.by',]; public const URL_BUS_EULA=[ 'ru' => 'https://www.1c-bitrix.ru/download/law/eula_bus.pdf', 'by' => 'https://www.1c-bitrix.by/download/law/eula_bus.pdf', 'kz' => 'https://www.1c-bitrix.kz/download/law/eula_bus.pdf', 'ua' => 'https://www.bitrix.ua/download/law/eula_bus.pdf',]; public const URL_CP_EULA=[ 'ru' => 'https://www.1c-bitrix.ru/download/law/eula_cp.pdf', 'by' => 'https://www.1c-bitrix.by/download/law/eula_cp.pdf', 'kz' => 'https://www.1c-bitrix.kz/download/law/eula_cp.pdf', 'en' => 'https://www.bitrix24.com/eula/', 'br' => 'https://www.bitrix24.com.br/eula/', 'fr' => 'https://www.bitrix24.fr/eula/', 'pl' => 'https://www.bitrix24.pl/eula/', 'it' => 'https://www.bitrix24.it/eula/', 'la' => 'https://www.bitrix24.es/eula/',]; public const URL_RENEWAL_LICENSE=[ 'com' => 'https://store.bitrix24.com/profile/license-keys.php', 'eu' => 'https://store.bitrix24.eu/profile/license-keys.php', 'de' => 'https://store.bitrix24.de/profile/license-keys.php', 'ru' => 'https://www.1c-bitrix.ru/buy/products/b24.php#tab-section-2', 'by' => 'https://www.1c-bitrix.by/buy/products/b24.php#tab-section-2', 'kz' => 'https://www.1c-bitrix.kz/buy/products/b24.php#tab-section-2',]; public function getKey(): string{ if($this->_951483534 === null){ $_614708303= Loader::getDocumentRoot(). ___1276009(0); $LICENSE_KEY= ___1276009(1); if($GLOBALS['____732611587'][0]($_614708303)){ include($_614708303);} $this->_951483534=($LICENSE_KEY == ___1276009(2) || $GLOBALS['____732611587'][1]($LICENSE_KEY) == ___1276009(3)? ___1276009(4): $LICENSE_KEY);} return $this->_951483534;} public function getHashLicenseKey(): string{ return $GLOBALS['____732611587'][2]($this->getKey());} public function getPublicHashKey(): string{ return $GLOBALS['____732611587'][3](___1276009(5). $this->getKey(). ___1276009(6));} public function isDemoKey(): bool{ return $this->getKey() == ___1276009(7);} public function getBuyLink(): string{ return $this->getDomainStoreLicense(). ___1276009(8). $this->getHashLicenseKey(). ___1276009(9). LANGUAGE_ID;} public function getDocumentationLink(): string{ $_500049987= $this->getRegion(); if($GLOBALS['____732611587'][4]($_500049987,[___1276009(10), ___1276009(11), ___1276009(12)])){ return ___1276009(13);} return ___1276009(14);} public function getRenewalLink(): string{ $_500049987= $this->getRegion(); if($GLOBALS['____732611587'][5]($_500049987,[___1276009(15), ___1276009(16), ___1276009(17), ___1276009(18)])){ return self::URL_RENEWAL_LICENSE[$_500049987];} if($GLOBALS['____732611587'][6]($_500049987,[___1276009(19), ___1276009(20), ___1276009(21), ___1276009(22), ___1276009(23)])){ return self::URL_RENEWAL_LICENSE[___1276009(24)];} return self::URL_RENEWAL_LICENSE[___1276009(25)];} public function getDomainStoreLicense(): string{ return self::DOMAINS_STORE_LICENSE[$this->getRegion()] ?? self::DOMAINS_STORE_LICENSE[___1276009(26)];} public function isDemo(): bool{ return $GLOBALS['____732611587'][7](___1276009(27)) && DEMO === ___1276009(28);} public function isTimeBound(): bool{ return $GLOBALS['____732611587'][8](___1276009(29)) && TIMELIMIT_EDITION === ___1276009(30);} public function isEncoded(): bool{ return $GLOBALS['____732611587'][9](___1276009(31)) && ENCODE === ___1276009(32);} public function getExpireDate():?Date{ $_1402772473= (int)($GLOBALS[___1276009(33)] ??(934-2*467)); if($_1402772473>(1208/2-604)){ return Date::createFromTimestamp($_1402772473);} return null;} public function getSupportExpireDate():?Date{ $_1402772473= Option::get(___1276009(34), ___1276009(35)); if(Date::isCorrect($_1402772473, ___1276009(36))){ return new Date($_1402772473, ___1276009(37));} return null;} public function getRegion():?string{ if(Loader::includeModule(___1276009(38))){ return \CBitrix24::getPortalZone();} $_500049987= Option::get(___1276009(39), ___1276009(40)); if(!empty($_500049987)){ return $_500049987;} $_500049987= $this->__867947439(); if(!empty($_500049987)){ return $_500049987;} return $this->__1406544156();} public function getEulaLink(): string{ if(ModuleManager::isModuleInstalled(___1276009(41))){ return self::URL_CP_EULA[$this->getRegion()] ?? self::URL_CP_EULA[___1276009(42)];} return self::URL_BUS_EULA[$this->getRegion()] ?? self::URL_BUS_EULA[___1276009(43)];} private function __867947439():?string{ $_789167034= Option::get(___1276009(44), ___1276009(45)); if($_789167034 === ___1276009(46)){ return ___1276009(47);} if($_789167034 === ___1276009(48)){ return ___1276009(49);} if($_789167034 === ___1276009(50)){ return ___1276009(51);} return null;} private function __1406544156():?string{ $_795675454= Application::getDocumentRoot(); if($GLOBALS['____732611587'][10]($_795675454. ___1276009(52))){ return ___1276009(53);} if($GLOBALS['____732611587'][11]($_795675454. ___1276009(54))){ return ___1276009(55);} if($GLOBALS['____732611587'][12]($_795675454. ___1276009(56))){ return ___1276009(57);} if($GLOBALS['____732611587'][13]($_795675454. ___1276009(58))){ return ___1276009(59);} return null;} public function getPartnerId(): int{ return (int)Option::get(___1276009(60), ___1276009(61),(1480/2-740));} public function getMaxUsers(): int{ return (int)Option::get(___1276009(62), ___1276009(63),(956-2*478));} public function isExtraCountable(): bool{ return Option::get(___1276009(64), ___1276009(65), ___1276009(66)) === ___1276009(67) && ModuleManager::isModuleInstalled(___1276009(68));} public function getActiveUsersCount(Date $_1322306428= null): int{ $_342715880= Application::getConnection(); $_1053669129=(996-2*498); if($_1322306428 !== null){  $_2016388783= ___1276009(69).$_342715880->getSqlHelper()->convertToDbDate($_1322306428);} else{  $_2016388783= ___1276009(70);} if(ModuleManager::isModuleInstalled(___1276009(71))){ $_818169890="
				SELECT COUNT(DISTINCT U.ID)
				FROM
					b_user U
					INNER JOIN b_user_field F ON F.ENTITY_ID = 'USER' AND F.FIELD_NAME = 'UF_DEPARTMENT'
					INNER JOIN b_utm_user UF ON
						UF.FIELD_ID = F.ID
						AND UF.VALUE_ID = U.ID
						AND UF.VALUE_INT > 0
				WHERE U.ACTIVE = 'Y'
					{$_2016388783}
			"; $_1053669129= (int)$_342715880->queryScalar($_818169890); $_1484006957= (int)Option::get(___1276009(72), ___1276009(73)); if($_1484006957> min(8,0,2.6666666666667) && $this->isExtraCountable()){ $_818169890="
						SELECT COUNT(1)
						FROM
							b_user U
							INNER JOIN b_extranet_user EU ON EU.USER_ID = U.ID AND EU.CHARGEABLE = 'Y'
							INNER JOIN b_user_group UG ON UG.USER_ID = U.ID AND UG.GROUP_ID = {$_1484006957}
							LEFT JOIN (
								SELECT UF.VALUE_ID 
								FROM 
									b_user_field F
									INNER JOIN b_utm_user UF ON UF.FIELD_ID = F.ID AND UF.VALUE_INT > 0
								WHERE F.ENTITY_ID = 'USER' AND F.FIELD_NAME = 'UF_DEPARTMENT'
							) D ON D.VALUE_ID = U.ID
						WHERE U.ACTIVE = 'Y'
							{$_2016388783}
							AND D.VALUE_ID IS NULL
					"; $_1053669129 += (int)$_342715880->queryScalar($_818169890);}} return $_1053669129;}  public function getName(): string{ return Option::get(___1276009(74), ___1276009(75));}  public function getCodes(): array{ $_1869825147= Option::get(___1276009(76), ___1276009(77)); if($_1869825147 != ___1276009(78)){ return $GLOBALS['____732611587'][14](___1276009(79), $_1869825147);} return[];}}?>